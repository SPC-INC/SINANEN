$mdBtnAnime: 0.5s;
.md-btn {
  display: flex;
  align-items: center; //中段に揃える
  position: relative;
  z-index: 1;
  margin-right: auto;
  margin-left: auto;
  padding-left: 2.8rem;
  border: 0;
  width: 28rem;
  height: 7rem;
  overflow: hidden;
  line-height: 1;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  transition-duration: $mdBtnAnime;
  @media #{$media-sp} {
    width: 25rem;
    height: 5.5rem;
  }
  cursor: pointer;
  .arrow {
    position: absolute;
    top: 50%;
    right: 3rem;
    transform: translateY(-50%);
  }

  // テキストを左端に寄せる
  &.left-text {
    justify-content: flex-start;
    text-align: left;
  }

  // button系の子要素を装飾する
  &.mat {
    padding: 0;
    a,
    input[type="button"],
    input[type="submit"],
    button {
      display: inline-flex;
      justify-content: center; //水平上の中央に寄せる
      align-items: center; //中段に揃える
      border: 0;
      width: 100%;
      height: 100%;
      font-size: inherit;
      font-weight: inherit;
      line-height: 1;
      color: inherit;
      background: transparent;
      outline: none;
      transition: color 0s;
    }
  }

  // スライドアニメ演出用要素
  &::before {
    display: inline-block;
    position: absolute;
    top: 0;
    z-index: -1;
    width: 100%;
    height: 100%;
    background: none;
    transition-duration: $mdBtnAnime;
    pointer-events: none;
    content: "";
  }

  // デフォルト　左から右へスライド
  &:not(.reverse):before {
    left: -100%;
  }

  // 右から左へスライド
  &.reverse:before {
    right: -100%;
  }

  // スライドアニメを行わない
  &.stay:before {
    display: none;
  }

  // テキストの頭に添えるアイコン
  .head-icon {
    margin-right: 0.5em;
    margin-left: -1em;
  }

  // ボタンの左右どちらかに置くアイコン
  .left-icon,
  .right-icon {
    position: absolute;
    top: 50%;
    z-index: 10;
    transition: color 0s;
    transform: translate(0, -50%);
    pointer-events: none;
  }

  // 右アイコンの詳細位置
  .right-icon {
    right: 0.8em;
    transition: right $mdBtnAnime;
  }

  // 左アイコンの詳細位置
  .left-icon {
    left: 0.8em;
    transition: left $mdBtnAnime;
  }

  &:hover,
  a:hover & {
    text-decoration: none;
    &:not(.reverse):before {
      left: 0;
    }
    &.reverse:before {
      right: 0;
    }
    .right-icon:not(.stay) {
      right: 0.5em;
    }
    .left-icon:not(.stay) {
      left: 0.5em;
    }
  }

  /*
        ######   #######  ##        #######  ########
       ##       ##     ## ##       ##     ## ##     ##
       ##       ##     ## ##       ##     ## ########
       ##       ##     ## ##       ##     ## ##   ##
        ######   #######  ########  #######  ##     ##
*/
  &.white {
    $btncolor: #fff;
    $textcolor: #e6002d;
    color: $textcolor;
    background-color: $btncolor;
    .icon {
      position: absolute;
      right: 2.8rem;
      width: 5rem;
      stroke: #e6002d;
      transition: all 0.5s;
    }
    &:before,
    &:hover,
    a:hover & {
      color: $btncolor;
      background-color: #1a1a1a;
    }
    &:hover {
      .icon {
        right: 0.8rem;
        stroke: white;
      }
    }
  }
  &.bd-red {
    $btncolor: #fff;
    $textcolor: #e6002d;
    border: 1px solid #e6002d;
    color: $textcolor;
    background-color: #fff;
    .icon {
      position: absolute;
      right: 2.8rem;
      z-index: 2;
      width: 5rem;
      stroke: #e6002d;
      transition: all 0.5s;
    }
    &:before,
    &:hover,
    a:hover & {
      color: $btncolor;
      background-color: #e6002d;
    }
    &:hover {
      .icon {
        right: 0.8rem;
        stroke: white;
      }
    }
  }
  &.red {
    $textcolor: #fff;
    $btncolor: #fff;
    color: $textcolor;
    text-align: left;
    background-color: #e6002d;

    .icon {
      position: absolute;
      right: 10.5rem;
      z-index: 2;
      width: 11.7rem;
      stroke: #fff;
      transition: all 0.5s;
    }
    &:before,
    &:hover,
    a:hover & {
      color: $btncolor;
      background-color: #1a1a1a;
    }
    &:hover {
      .icon {
        right: 3rem;
        stroke: white;
      }
    }
    @media #{$media-sp} {
      .icon {
        right: 3.2rem;
        width: 4rem;
      }
    }
  }
  &.black {
    $btncolor: #000;
    $textcolor: #fff;
    border: solid 1px $btncolor;
    color: $textcolor;
    background-color: $btncolor;

    &:before,
    &:hover,
    a:hover & {
      color: $btncolor;
      background-color: $textcolor;
    }
  }
}

/*
#styleguide
ボタン .md-btn

指定したタグをボタン風にする。
マウスホバーもしくは「active」クラスでアニメーションする。aタグの小要素に使っている場合は、親aタグの状態にも反応する。
「mat」を付けることで、直下のボタン要素を装飾することもできる。
動く系のアニメは「stay」で止められる。
```
<a class="md-btn w300 black" href="#">
  次のページ
  <i class="icon fas fa-fw fa-chevron-right right-icon"></i>
</a>
<span class="md-btn b-line w300 mat stay">
  <i class="icon fas fa-fw fa-check left-icon stay"></i>
  <input type="submit" value="入力内容を確認する">
</span>

<a class="md-btn w300 black reverse" href="#">
  <i class="icon fas fa-fw fa-chevron-left left-icon"></i>
  戻る
</a>
<a class="md-btn w300 b-line left-text" href="#">
  テキストテキスト<br>テキスト
</a>
```
*/
